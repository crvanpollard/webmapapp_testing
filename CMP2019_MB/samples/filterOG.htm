<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8" />
<title>Filter symbols by text input</title>
<meta name="viewport" content="initial-scale=1,maximum-scale=1,user-scalable=no" />
<script src="https://api.mapbox.com/mapbox-gl-js/v1.6.1/mapbox-gl.js"></script>
<link href="https://api.mapbox.com/mapbox-gl-js/v1.6.1/mapbox-gl.css" rel="stylesheet" />
<style>
	body { margin: 0; padding: 0; }
	#map { position: absolute; top: 0; bottom: 0; width: 100%; };
</style>
</head>
<body>
<style>
.filter-ctrl {
position: absolute;
top: 10px;
right: 10px;
z-index: 1;
width: 180px;
}
 
.filter-ctrl input[type='text'] {
font: 12px/20px 'Helvetica Neue', Arial, Helvetica, sans-serif;
width: 100%;
border: 0;
background-color: #fff;
height: 40px;
margin: 0;
color: rgba(0, 0, 0, 0.5);
padding: 10px;
box-shadow: 0 0 0 2px rgba(0, 0, 0, 0.1);
border-radius: 3px;
}
</style>
<div id="map"></div>
<div class="filter-ctrl">
<input
id="filter-input"
type="text"
name="filter"
placeholder="Filter by name"
/>
</div>
 
<script>
mapboxgl.accessToken = 'pk.eyJ1IjoiY3J2YW5wb2xsYXJkIiwiYSI6ImNqMHdvdnd5MTAwMWEycXBocm4zbXVjZm8ifQ.3zjbFccILu6mL7cOTtp40A';
var places = 'https://services1.arcgis.com/LWtWv6q6BJyKidj8/ArcGIS/rest/services/CMP_SubcorridorsEmergingCorridors/FeatureServer/0/query?where=1%3D1&objectIds=&time=&geometry=&geometryType=esriGeometryEnvelope&inSR=&spatialRel=esriSpatialRelIntersects&resultType=none&distance=0.0&units=esriSRUnit_Meter&returnGeodetic=false&outFields=*&returnGeometry=true&returnCentroid=false&featureEncoding=esriDefault&multipatchOption=xyFootprint&maxAllowableOffset=&geometryPrecision=&outSR=&datumTransformation=&applyVCSProjection=false&returnIdsOnly=false&returnUniqueIdsOnly=false&returnCountOnly=false&returnExtentOnly=false&returnQueryGeometry=false&returnDistinctValues=false&cacheHint=false&orderByFields=&groupByFieldsForStatistics=&outStatistics=&having=&resultOffset=&resultRecordCount=&returnZ=false&returnM=false&returnExceededLimitFeatures=true&quantizationParameters=&sqlFormat=none&f=pgeojson&token='; 


  /*  var places = {
        'type': 'FeatureCollection',
        'features': [
            {
                'type': 'Feature',
                'properties': {
                    'icon': 'theatre'
                },
                'geometry': {
                    'type': 'Point',
                    'coordinates': [-77.038659, 38.931567]
                }
            },
            {
                'type': 'Feature',
                'properties': {
                    'icon': 'theatre'
                },
                'geometry': {
                    'type': 'Point',
                    'coordinates': [-77.003168, 38.894651]
                }
            },
            {
                'type': 'Feature',
                'properties': {
                    'icon': 'bar'
                },
                'geometry': {
                    'type': 'Point',
                    'coordinates': [-77.090372, 38.881189]
                }
            },
            {
                'type': 'Feature',
                'properties': {
                    'icon': 'bicycle'
                },
                'geometry': {
                    'type': 'Point',
                    'coordinates': [-77.052477, 38.943951]
                }
            },
            {
                'type': 'Feature',
                'properties': {
                    'icon': 'music'
                },
                'geometry': {
                    'type': 'Point',
                    'coordinates': [-77.031706, 38.914581]
                }
            },
            {
                'type': 'Feature',
                'properties': {
                    'icon': 'music'
                },
                'geometry': {
                    'type': 'Point',
                    'coordinates': [-77.020945, 38.878241]
                }
            },
            {
                'type': 'Feature',
                'properties': {
                    'icon': 'music'
                },
                'geometry': {
                    'type': 'Point',
                    'coordinates': [-77.007481, 38.876516]
                }
            }
        ]
    };
*/
    var layerIDs = []; // Will contain a list used to filter against.
    var filterInput = document.getElementById('filter-input');
   var map = new mapboxgl.Map({
        container: 'map',
        style: 'mapbox://styles/mapbox/light-v10',
        center: [ -75.170669,39.950143], 
        zoom: 9
    });

    map.on('load', function() {
        console.log(places);
        // Add a GeoJSON source containing place coordinates and information.
        map.addSource('places', {
            'type': 'geojson',
            'data': places
        });

        places.features.forEach(function(feature) {
          console.log(layerID);
            var symbol = feature.properties['CMP_ID'];
            var layerID = symbol;

            // Add a layer for this symbol type if it hasn't been added already.
            if (!map.getLayer(layerID)) {
                map.addLayer({
                    'id': layerID,
                    'type': 'geojson',
                    'source': 'places',
                    'layout': {visibility:'visible'},
                     'paint': {
                    'fill-color': [
                        "case",
                        ["==", ["get", "CMP_ID"], 1],"#92D3C8",
                        ["==", ["get", "CMP_ID"], 2],"#F37D80",
                        ["==", ["get", "CMP_ID"], 3],"#FBF7C0",
                        ["==", ["get", "CMP_ID"], 4],"#F9BDBF",
                        ["==", ["get", "CMP_ID"], 5],"#FFD380",
                        ["==", ["get", "CMP_ID"], 6],"#C7E6DC",
                        ["==", ["get", "CMP_ID"], 7],"#D7C19E",
                        ["==", ["get", "CMP_ID"], 8],"#82D4F2",
                        ["==", ["get", "CMP_ID"], 9],"#DABEDB",
                        ["==", ["get", "CMP_ID"], 10],"#B57DB6",
                        ["==", ["get", "CMP_ID"], 11],"#FAF078",
                        ["==", ["get", "CMP_ID"], 12],"#DB7DB3",
                        ["==", ["get", "CMP_ID"], 13],"#D7D79E",
                        ["==", ["get", "CMP_ID"], 14],"#80AEDD",
                        ["==", ["get", "CMP_ID"], 15],"#9DCB3B",
                        ["==", ["get", "CMP_ID"], 16],"#FFEBBE",
                        ["==", ["get", "CMP_ID"], 17],"#39BF7C",
                        "#cccccc"
                      ],
                    'fill-opacity': 0.8
                    }
                //    'filter': ['==', 'icon', symbol]
                });

                layerIDs.push(layerID);
            }
        });

 /*       filterInput.addEventListener('keyup', function(e) {
            // If the input value matches a layerID set
            // it's visibility to 'visible' or else hide it.
            var value = e.target.value.trim().toLowerCase();
            layerIDs.forEach(function(layerID) {
                map.setLayoutProperty(
                    layerID,
                    'visibility',
                    layerID.indexOf(value) > -1 ? 'visible' : 'none'
                );
            });
        }); */

    });
</script>

</body>
</html>
</script>
 
</body>
</html>